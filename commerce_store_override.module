<?php

/**
 * @file
 * Provides per-store overrides of Commerce content.
 */

use Drupal\commerce_store\Entity\StoreInterface;
use Drupal\commerce_store_override\StoreOverride;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function commerce_store_override_commerce_store_delete(StoreInterface $store) {
  /** @var \Drupal\commerce_store_override\StoreOverrideRepositoryInterface $repository */
  $repository = \Drupal::service('commerce_store_override.repository');
  $repository->deleteMultipleByStore($store);
}

/**
 * Implements hook_entity_delete().
 */
function commerce_store_override_entity_delete(EntityInterface $entity) {
  if (in_array($entity->getEntityTypeId(), StoreOverride::SUPPORTED_ENTITY_TYPES)) {
    /** @var \Drupal\commerce_store_override\StoreOverrideRepositoryInterface $repository */
    $repository = \Drupal::service('commerce_store_override.repository');
    $repository->deleteMultipleByEntity($entity);
  }
}

/**
 * Implements hook_entity_delete().
 */
function commerce_store_override_entity_translation_delete(EntityInterface $translation) {
  if (in_array($translation->getEntityTypeId(), StoreOverride::SUPPORTED_ENTITY_TYPES)) {
    /** @var \Drupal\commerce_store_override\StoreOverrideRepositoryInterface $repository */
    $repository = \Drupal::service('commerce_store_override.repository');
    $repository->deleteMultipleByEntity($translation);
  }
}
